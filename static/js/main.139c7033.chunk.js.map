{"version":3,"sources":["App.tsx","index.tsx"],"names":["MyRadio","props","label","otherProps","useField","field","FormControlLabel","control","Radio","MyTextField","placeholder","meta","errorText","error","touched","TextField","helperText","autoComplete","validationSchema","yup","firstName","required","max","pets","of","name","App","initialValues","lastName","isTall","cookies","yoghurt","type","id","Math","random","onSubmit","data","setSubmitting","resetForm","console","log","values","errors","isSubmitting","handleChange","handleBlur","handleSubmit","as","Checkbox","value","arrayHelpers","Button","onClick","push","map","pet","index","key","Select","MenuItem","remove","disabled","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.139c7033.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Formik,\n  Field,\n  Form,\n  useField,\n  FieldAttributes,\n  FieldArray,\n} from \"formik\";\nimport {\n  TextField,\n  Button,\n  Checkbox,\n  Radio,\n  FormControlLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport * as yup from \"yup\";\n\ntype MyRadioProps = { label: string } & FieldAttributes<{}>;\n\n// Does not work in pre-Chromium MS Edge\n// const MyRadio: React.FC<MyRadioProps> = ({ label, ...props }) => {\n//   const [field] = useField<{}>(props);\n\n//   return <FormControlLabel {...field} control={<Radio />} label={label} />;\n// };\n\nconst MyRadio: React.FC<MyRadioProps> = (props) => {\n  const { label, ...otherProps } = props;\n  const [field] = useField<{}>(otherProps);\n\n  return <FormControlLabel {...field} control={<Radio />} label={label} />;\n};\n\nconst MyTextField: React.FC<FieldAttributes<{}>> = ({\n  placeholder,\n  ...props\n}) => {\n  const [field, meta] = useField<{}>(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      placeholder={placeholder}\n      {...field}\n      helperText={errorText}\n      autoComplete=\"off\"\n      error={!!errorText}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  firstName: yup.string().required().max(10),\n  pets: yup.array().of(\n    yup.object({\n      name: yup.string().required(),\n    })\n  ),\n});\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          isTall: false,\n          cookies: [],\n          yoghurt: \"\",\n          pets: [{ type: \"cat\", name: \"jarvis\", id: Math.random() }],\n        }}\n        validationSchema={validationSchema}\n        // validate={(values) => {\n        //   const errors: Record<string, string> = {};\n\n        //   if (values.firstName.includes(\"bob\")) {\n        //     errors.firstName = \"No bob\";\n        //   }\n\n        //   return errors;\n        // }}\n        onSubmit={(data, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n\n          // Make async call\n          console.log(\"submit\", data);\n\n          setSubmitting(false);\n        }}\n      >\n        {({\n          values,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          // <form onSubmit={handleSubmit}></form>\n          <Form>\n            {/* <TextField\n              name=\"firstName\"\n              value={values.firstName}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            /> */}\n            {/* <div>\n              <TextField\n                name=\"lastName\"\n                value={values.lastName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n            </div> */}\n            {/* <Field\n              placeholder=\"first name\"\n              name=\"firstName\"\n              type=\"input\"\n              as={TextField}\n            /> */}\n            <MyTextField\n              placeholder=\"first name\"\n              name=\"firstName\"\n              type=\"input\"\n            />\n            <div>\n              {/* <Field\n                placeholder=\"last name\"\n                name=\"lastName\"\n                type=\"input\"\n                as={TextField}\n              /> */}\n              <MyTextField\n                placeholder=\"last name\"\n                name=\"lastName\"\n                type=\"input\"\n              />\n            </div>\n            <Field name=\"isTall\" type=\"checkbox\" as={Checkbox} />\n\n            <div>cookies:</div>\n\n            <Field\n              name=\"cookies\"\n              value=\"chocolate chip\"\n              type=\"checkbox\"\n              as={Checkbox}\n            />\n            <Field\n              name=\"cookies\"\n              value=\"snickerdoodle\"\n              type=\"checkbox\"\n              as={Checkbox}\n            />\n            <Field name=\"cookies\" value=\"sugar\" type=\"checkbox\" as={Checkbox} />\n\n            <div>yoghurt:</div>\n            {/* <Field name=\"yoghurt\" value=\"peach\" type=\"radio\" as={Radio} />\n            <Field name=\"yoghurt\" value=\"blueberry\" type=\"radio\" as={Radio} />\n            <Field name=\"yoghurt\" value=\"apple\" type=\"radio\" as={Radio} /> */}\n\n            <MyRadio name=\"yoghurt\" type=\"radio\" value=\"peach\" label=\"peach\" />\n            <MyRadio\n              name=\"yoghurt\"\n              type=\"radio\"\n              value=\"blueberry\"\n              label=\"blueberry\"\n            />\n            <MyRadio name=\"yoghurt\" type=\"radio\" value=\"apple\" label=\"apple\" />\n\n            <FieldArray name=\"pets\">\n              {(arrayHelpers) => (\n                <div>\n                  <Button\n                    onClick={() =>\n                      arrayHelpers.push({\n                        type: \"frog\",\n                        name: \"\",\n                        id: \"\" + Math.random(),\n                      })\n                    }\n                  >\n                    add pet\n                  </Button>\n                  {values.pets.map((pet, index) => {\n                    const name = `pets.${index}.name`;\n\n                    return (\n                      <div key={pet.id}>\n                        <MyTextField placeholder=\"pet name\" name={name} />\n\n                        <Field\n                          name={`pets.${index}.type`}\n                          type=\"select\"\n                          as={Select}\n                        >\n                          <MenuItem value=\"cat\">cat</MenuItem>\n                          <MenuItem value=\"dog\">dog</MenuItem>\n                          <MenuItem value=\"frog\">frog</MenuItem>\n                        </Field>\n                        <Button onClick={() => arrayHelpers.remove(index)}>\n                          x\n                        </Button>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </FieldArray>\n\n            <div>\n              <Button disabled={isSubmitting} type=\"submit\">\n                submit\n              </Button>\n            </div>\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n            <pre>{JSON.stringify(errors, null, 2)}</pre>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default App;\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n//https://medium.com/@matwankarmalay/create-react-app-ie11-script1002-syntax-error-how-to-get-rid-of-it-d70000c53ddf\n// Also:\n// Delete node_modules/.cache folder\n// Clear IE11 Cache\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}